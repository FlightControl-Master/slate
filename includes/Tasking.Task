<h1 id='tasking-task-module'>Tasking.Task Module</h1>
<p><strong>Tasking</strong> -- This module contains the TASK class.</p>
<h5 id='authors-flightcontrol-design-and-programming'>Authors: FlightControl - Design and Programming</h5><h2 id='task-class-2'>TASK Class</h2>
<pre>
Inheritance : The TASK Class inherits from the following parents :
BASE
    `-- FSM
        `-- FSM_TASK
            `-- TASK
</pre>

<h4> Attributes </h4>

<ul>
<li><a href="#scheduler-class">SCHEDULER</a> TaskScheduler</li>
<li><a href="#mission-class">MISSION</a> Mission</li>
<li><a href="#set_group-class">SET_GROUP</a> SetGroup : The Set of Groups assigned to the Task</li>
<li><a href="#fsm_process-class">FSM_PROCESS</a> FsmTemplate</li>
<li><a href="#mission-class">MISSION</a> Mission</li>
<li><a href="#commandcenter-class">COMMANDCENTER</a> CommandCenter</li>
</ul>
<h3 id='task-onafterplayeraborted-playerunit-playername'>TASK:OnAfterPlayerAborted(PlayerUnit, PlayerName)</h3>
<p>FSM PlayerAborted event handler prototype for TASK.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> PlayerUnit : The Unit of the Player when he went back to spectators or left the mission.</li>
<li><u>String</u> PlayerName : The name of the Player.</li>
</ul>

<h4> Returns </h4>
<h3 id='task-onafterplayercrashed-playerunit-playername'>TASK:OnAfterPlayerCrashed(PlayerUnit, PlayerName)</h3>
<p>FSM PlayerCrashed event handler prototype for TASK.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> PlayerUnit : The Unit of the Player when he crashed in the mission.</li>
<li><u>String</u> PlayerName : The name of the Player.</li>
</ul>

<h4> Returns </h4>
<h3 id='task-onafterplayerdead-playerunit-playername'>TASK:OnAfterPlayerDead(PlayerUnit, PlayerName)</h3>
<p>FSM PlayerDead event handler prototype for TASK.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> PlayerUnit : The Unit of the Player when he died in the mission.</li>
<li><u>String</u> PlayerName : The name of the Player.</li>
</ul>

<h4> Returns </h4>
<h3 id='task-fail'>TASK:Fail()</h3>
<p>FSM Fail synchronous event function for TASK.
Use this event to Fail the Task.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-abort'>TASK:Abort()</h3>
<p>FSM Abort synchronous event function for TASK.
Use this event to Abort the Task.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-success'>TASK:Success()</h3>
<p>FSM Success synchronous event function for TASK.
Use this event to make the Task a Success.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-cancel'>TASK:Cancel()</h3>
<p>FSM Cancel synchronous event function for TASK.
Use this event to Cancel the Task.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-replan'>TASK:Replan()</h3>
<p>FSM Replan synchronous event function for TASK.
Use this event to Replan the Task.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-new-mission-setgroupassign-taskname-tasktype'>TASK:New(Mission, SetGroupAssign, TaskName, TaskType)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#mission-class">MISSION</a> Mission : The mission wherein the Task is registered.</li>
<li><a href="#set_group-class">SET_GROUP</a> SetGroupAssign : The set of groups for which the Task can be assigned.</li>
<li><u>String</u> TaskName : The name of the Task</li>
<li><u>String</u> TaskType : The type of the Task</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-getunitprocess'>TASK:GetUnitProcess()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#fsm_process-class">FSM_PROCESS</a> self</li>
</ul>
<h3 id='task-setunitprocess-self'>TASK:SetUnitProcess(self)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#fsm_process-class">FSM_PROCESS</a> self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-joinunit-playerunit-playergroup'>TASK:JoinUnit(PlayerUnit, PlayerGroup)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> PlayerUnit : The CLIENT or UNIT of the Player joining the Mission.</li>
<li><a href="#group-class">GROUP</a> PlayerGroup : The GROUP of the player joining the Mission.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> true : if Unit is part of the Task.</li>
</ul>
<h3 id='task-abortunit-playerunit'>TASK:AbortUnit(PlayerUnit)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> PlayerUnit : The CLIENT or UNIT of the Player aborting the Task.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> true : if Unit is part of the Task.</li>
</ul>
<h3 id='task-crashunit-playerunit'>TASK:CrashUnit(PlayerUnit)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> PlayerUnit : The CLIENT or UNIT of the Player aborting the Task.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> true : if Unit is part of the Task.</li>
</ul>
<h3 id='task-getmission'>TASK:GetMission()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#mission-class">MISSION</a> self</li>
</ul>
<h3 id='task-getgroups'>TASK:GetGroups()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#set_group-class">SET_GROUP</a> self</li>
</ul>
<h3 id='task-assigntogroup-taskgroup'>TASK:AssignToGroup(TaskGroup)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#group-class">GROUP</a> TaskGroup</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-hasgroup-findgroup'>TASK:HasGroup(FindGroup)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#group-class">GROUP</a> FindGroup</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> self</li>
</ul>
<h3 id='task-assigntounit-taskunit'>TASK:AssignToUnit(TaskUnit)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> TaskUnit</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-unassignfromunit-taskunit'>TASK:UnAssignFromUnit(TaskUnit)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> TaskUnit</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-settimeout-timer'>TASK:SetTimeOut (Timer)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li>#integer Timer : in seconds</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-messagetogroups'>TASK:MessageToGroups()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-sendbriefingtoassignedgroups'>TASK:SendBriefingToAssignedGroups()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-unassignfromgroups'>TASK:UnAssignFromGroups()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-unassignfromgroup'>TASK:UnAssignFromGroup()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-isassignedtogroup-taskgroup'>TASK:IsAssignedToGroup(TaskGroup)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#group-class">GROUP</a> TaskGroup</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> self</li>
</ul>
<h3 id='task-hasaliveunits'>TASK:HasAliveUnits()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> self</li>
</ul>
<h3 id='task-setmenu-menutime'>TASK:SetMenu(MenuTime)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>Number</u> MenuTime</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-setmenuforgroup-menutime'>TASK:SetMenuForGroup(MenuTime)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>Number</u> MenuTime</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-setplannedmenuforgroup-taskgroup-menutext-menutime'>TASK:SetPlannedMenuForGroup(TaskGroup, MenuText, MenuTime)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#group-class">GROUP</a> TaskGroup</li>
<li><u>String</u> MenuText : The menu text.</li>
<li><u>Number</u> MenuTime</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-setassignedmenuforgroup-taskgroup-menutime'>TASK:SetAssignedMenuForGroup(TaskGroup, MenuTime)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#group-class">GROUP</a> TaskGroup</li>
<li><u>Number</u> MenuTime</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-removemenu-menutime'>TASK:RemoveMenu(MenuTime)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>Number</u> MenuTime</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-removeplannedmenuforgroup-taskgroup-menutime'>TASK:RemovePlannedMenuForGroup(TaskGroup, MenuTime)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#group-class">GROUP</a> TaskGroup</li>
<li><u>Number</u> MenuTime</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-removeassignedmenuforgroup-taskgroup-menutime'>TASK:RemoveAssignedMenuForGroup(TaskGroup, MenuTime)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#group-class">GROUP</a> TaskGroup</li>
<li><u>Number</u> MenuTime</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-menutaskstatus'>TASK:MenuTaskStatus()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-menutaskabort'>TASK:MenuTaskAbort()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-gettaskname'>TASK:GetTaskName()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>String</u> TaskName</li>
</ul>
<h3 id='task-getprocesstemplate-processname'>TASK:GetProcessTemplate(ProcessName)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> ProcessName</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#fsm_process-class">FSM_PROCESS</a> self</li>
</ul>
<h3 id='task-failprocesses-taskunitname'>TASK:FailProcesses(TaskUnitName)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> TaskUnitName</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-setstatemachine-taskunit-fsm'>TASK:SetStateMachine(TaskUnit, Fsm)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> TaskUnit</li>
<li><a href="#fsm_process-class">FSM_PROCESS</a> Fsm</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-getstatemachine-taskunit'>TASK:GetStateMachine(TaskUnit)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> TaskUnit</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#fsm_process-class">FSM_PROCESS</a> self</li>
</ul>
<h3 id='task-removestatemachine-taskunit'>TASK:RemoveStateMachine(TaskUnit)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> TaskUnit</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-hasstatemachine-taskunit'>TASK:HasStateMachine(TaskUnit)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#unit-class">UNIT</a> TaskUnit</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-getscoring'>TASK:GetScoring()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#scoring-class">SCORING</a> Scoring</li>
</ul>
<h3 id='task-gettaskindex'>TASK:GetTaskIndex()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>String</u> The : Task ID</li>
</ul>
<h3 id='task-setname-taskname'>TASK:SetName(TaskName)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> TaskName</li>
</ul>

<h4> Returns </h4>
<h3 id='task-getname'>TASK:GetName()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>String</u> The : Task Name</li>
</ul>
<h3 id='task-settype-tasktype'>TASK:SetType(TaskType)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> TaskType</li>
</ul>

<h4> Returns </h4>
<h3 id='task-gettype'>TASK:GetType()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>String</u> TaskType</li>
</ul>
<h3 id='task-setid-taskid'>TASK:SetID(TaskID)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> TaskID</li>
</ul>

<h4> Returns </h4>
<h3 id='task-getid'>TASK:GetID()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>String</u> TaskID</li>
</ul>
<h3 id='task-statesuccess'>TASK:StateSuccess()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-isstatesuccess'>TASK:IsStateSuccess()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-statefailed'>TASK:StateFailed()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-isstatefailed'>TASK:IsStateFailed()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-stateplanned'>TASK:StatePlanned()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-isstateplanned'>TASK:IsStatePlanned()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-stateaborted'>TASK:StateAborted()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-isstateaborted'>TASK:IsStateAborted()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-statecancelled'>TASK:StateCancelled()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-isstatecancelled'>TASK:IsStateCancelled()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-stateassigned'>TASK:StateAssigned()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-isstateassigned'>TASK:IsStateAssigned()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-statehold'>TASK:StateHold()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-isstatehold'>TASK:IsStateHold()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-statereplanned'>TASK:StateReplanned()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-isstatereplanned'>TASK:IsStateReplanned()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-getstatestring'>TASK:GetStateString()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>
<h3 id='task-setbriefing-taskbriefing'>TASK:SetBriefing(TaskBriefing)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> TaskBriefing</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-onenterassigned-event-from-to'>TASK:onenterAssigned(Event, From, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> Event</li>
<li><u>String</u> From</li>
<li><u>String</u> To</li>
</ul>

<h4> Returns </h4>
<h3 id='task-onentersuccess-event-from-to'>TASK:onenterSuccess(Event, From, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> Event</li>
<li><u>String</u> From</li>
<li><u>String</u> To</li>
</ul>

<h4> Returns </h4>
<h3 id='task-onenteraborted-from-event-to'>TASK:onenterAborted(From, Event, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> From</li>
<li><u>String</u> Event</li>
<li><u>String</u> To</li>
</ul>

<h4> Returns </h4>
<h3 id='task-onafterreplan-from-event-to'>TASK:onafterReplan(From, Event, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> From</li>
<li><u>String</u> Event</li>
<li><u>String</u> To</li>
</ul>

<h4> Returns </h4>
<h3 id='task-onenterfailed-from-event-to'>TASK:onenterFailed(From, Event, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> From</li>
<li><u>String</u> Event</li>
<li><u>String</u> To</li>
</ul>

<h4> Returns </h4>
<h3 id='task-onstatechange-event-from-to'>TASK:onstatechange(Event, From, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> Event</li>
<li><u>String</u> From</li>
<li><u>String</u> To</li>
</ul>

<h4> Returns </h4>
<h3 id='task-onenterplanned-event-from-to'>TASK:onenterPlanned(Event, From, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> Event</li>
<li><u>String</u> From</li>
<li><u>String</u> To</li>
</ul>

<h4> Returns </h4>
<h3 id='task-onbeforetimeout-event-from-to'>TASK:onbeforeTimeOut(Event, From, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><u>String</u> Event</li>
<li><u>String</u> From</li>
<li><u>String</u> To</li>
</ul>

<h4> Returns </h4>
<h3 id='task-setdispatcher-dispatcher'>TASK:SetDispatcher(Dispatcher)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
<li><a href="#detection_manager-class">DETECTION_MANAGER</a> Dispatcher</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>
<h3 id='task-reportsummary'>TASK:ReportSummary()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>String</u> self</li>
</ul>
<h3 id='task-reportdetails'>TASK:ReportDetails()</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#task-class">TASK</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>String</u> self</li>
</ul>
