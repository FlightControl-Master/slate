<h1 id="core-point-module">Core.Point Module</h1>

<p><strong>Core</strong> - <strong>POINT_VEC</strong> classes define an <strong>extensive API</strong> to <strong>manage 3D points</strong> in the simulation space.</p>

<h4>1) @{Point#POINT_VEC3} class, extends [BASE](#base-class)</h4>

<p>The @{Point#POINT_VEC3} class defines a 3D point in the simulator.</p>

<p><strong>Important Note:</strong> Most of the functions in this section were taken from MIST, and reworked to OO concepts.
In order to keep the credibility of the the author, I want to emphasize that the of the MIST framework was created by Grimes, who you can find on the Eagle Dynamics Forums.</p>

<h4> 1.1) POINT_VEC3 constructor</h4>

<p>A new POINT_VEC3 instance can be created with:</p>

<ul>
<li>@{Point#POINT_VEC3.New}(): a 3D point.</li>
<li>@{Point#POINT_VEC3.NewFromVec3}(): a 3D point created from a @{DCSTypes#Vec3}.</li>
</ul>

<h4> 1.2) Manupulate the X, Y, Z coordinates of the point</h4>

<p>A POINT_VEC3 class works in 3D space. It contains internally an X, Y, Z coordinate.
Methods exist to manupulate these coordinates.</p>

<p>The current X, Y, Z axis can be retrieved with the methods @{#POINT_VEC3.GetX}(), @{#POINT_VEC3.GetY}(), @{#POINT_VEC3.GetZ}() respectively.
The methods @{#POINT_VEC3.SetX}(), @{#POINT_VEC3.SetY}(), @{#POINT_VEC3.SetZ}() change the respective axis with a new value.
The current axis values can be changed by using the methods @{#POINT_VEC3.AddX}(), @{#POINT_VEC3.AddY}(), @{#POINT_VEC3.AddZ}()
to add or substract a value from the current respective axis value.
Note that the Set and Add methods return the current POINT_VEC3 object, so these manipulation methods can be chained&hellip; For example:</p>

<p>local Vec3 = PointVec3:AddX( 100 ):AddZ( 150 ):GetVec3()</p>

<h4> 1.3) Create waypoints for routes</h4>

<p>A POINT_VEC3 can prepare waypoints for Ground, Air and Naval groups to be embedded into a Route.</p>

<h4> 1.5) Smoke, flare, explode, illuminate</h4>

<p>At the point a smoke, flare, explosion and illumination bomb can be triggered. Use the following methods:</p>

<h4> 1.5.1) Smoke</h4>

<ul>
<li>@{#POINT_VEC3.Smoke}(): To smoke the point in a certain color.</li>
<li>@{#POINT_VEC3.SmokeBlue}(): To smoke the point in blue.</li>
<li>@{#POINT_VEC3.SmokeRed}(): To smoke the point in red.</li>
<li>@{#POINT_VEC3.SmokeOrange}(): To smoke the point in orange.</li>
<li>@{#POINT_VEC3.SmokeWhite}(): To smoke the point in white.</li>
<li>@{#POINT_VEC3.SmokeGreen}(): To smoke the point in green.</li>
</ul>

<h4> 1.5.2) Flare</h4>

<ul>
<li>@{#POINT_VEC3.Flare}(): To flare the point in a certain color.</li>
<li>@{#POINT_VEC3.FlareRed}(): To flare the point in red.</li>
<li>@{#POINT_VEC3.FlareYellow}(): To flare the point in yellow.</li>
<li>@{#POINT_VEC3.FlareWhite}(): To flare the point in white.</li>
<li>@{#POINT_VEC3.FlareGreen}(): To flare the point in green.</li>
</ul>

<h4> 1.5.3) Explode</h4>

<ul>
<li>@{#POINT_VEC3.Explosion}(): To explode the point with a certain intensity.</li>
</ul>

<h4> 1.5.4) Illuminate</h4>

<ul>
<li>@{#POINT_VEC3.IlluminationBomb}(): To illuminate the point.</li>
</ul>

<h4>2) @{Point#POINT_VEC2} class, extends @{Point#POINT_VEC3}</h4>

<p>The @{Point#POINT_VEC2} class defines a 2D point in the simulator. The height coordinate (if needed) will be the land height + an optional added height specified.</p>

<h4>2.1) POINT_VEC2 constructor</h4>

<p>A new POINT_VEC2 instance can be created with:</p>

<ul>
<li>@{Point#POINT_VEC2.New}(): a 2D point, taking an additional height parameter.</li>
<li>@{Point#POINT_VEC2.NewFromVec2}(): a 2D point created from a @{DCSTypes#Vec2}.</li>
</ul>

<h4> 1.2) Manupulate the X, Altitude, Y coordinates of the 2D point</h4>

<p>A POINT_VEC2 class works in 2D space, with an altitude setting. It contains internally an X, Altitude, Y coordinate.
Methods exist to manupulate these coordinates.</p>

<p>The current X, Altitude, Y axis can be retrieved with the methods @{#POINT_VEC2.GetX}(), @{#POINT_VEC2.GetAlt}(), @{#POINT_VEC2.GetY}() respectively.
The methods @{#POINT_VEC2.SetX}(), @{#POINT_VEC2.SetAlt}(), @{#POINT_VEC2.SetY}() change the respective axis with a new value.
The current Lat(itude), Alt(itude), Lon(gitude) values can also be retrieved with the methods @{#POINT_VEC2.GetLat}(), @{#POINT_VEC2.GetAlt}(), @{#POINT_VEC2.GetLon}() respectively.
The current axis values can be changed by using the methods @{#POINT_VEC2.AddX}(), @{#POINT_VEC2.AddAlt}(), @{#POINT_VEC2.AddY}()
to add or substract a value from the current respective axis value.
Note that the Set and Add methods return the current POINT_VEC2 object, so these manipulation methods can be chained&hellip; For example:</p>

<p>local Vec2 = PointVec2:AddX( 100 ):AddY( 2000 ):GetVec2()</p>

<p><strong>API CHANGE HISTORY</strong></p>

<p>The underlying change log documents the API changes. Please read this carefully. The following notation is used:</p>

<ul>
<li><strong>Added</strong> parts are expressed in bold type face.</li>
<li><em>Removed</em> parts are expressed in italic type face.</li>
</ul>

<p>Hereby the change log:</p>

<p>2017-03-03: POINT_VEC3:<strong>Explosion( ExplosionIntensity )</strong> added.
2017-03-03: POINT_VEC3:<strong>IlluminationBomb()</strong> added.</p>

<p>2017-02-18: POINT_VEC3:<strong>NewFromVec2( Vec2, LandHeightAdd )</strong> added.</p>

<p>2016-08-12: POINT_VEC3:<strong>Translate( Distance, Angle )</strong> added.</p>

<p>2016-08-06: Made PointVec3 and Vec3, PointVec2 and Vec2 terminology used in the code consistent.</p>

<ul>
<li>Replaced method _Point_Vec3() to <strong>Vec3</strong>() where the code manages a Vec3. Replaced all references to the method.</li>
<li>Replaced method _Point_Vec2() to <strong>Vec2</strong>() where the code manages a Vec2. Replaced all references to the method.</li>
<li>Replaced method Random_Point_Vec3() to <strong>RandomVec3</strong>() where the code manages a Vec3. Replaced all references to the method.
.</li>
</ul>

<h4> Authors:</h4>

<ul>
<li>FlightControl : Design &amp; Programming</li>
</ul>

<h4> Contributions:</h4>

<h2 id="point_vec3-class">POINT_VEC3 Class</h2>

<pre>
Inheritance : The POINT_VEC3 Class inherits from the following parents :
BASE
    `-- POINT_VEC3
</pre>

<h4> Attributes </h4>

<ul>
<li>number x : The x coordinate in 3D space.</li>
<li>number y : The y coordinate in 3D space.</li>
<li>number z : The z coordiante in 3D space.</li>
<li><a href="#smokecolor-class">SMOKECOLOR</a> SmokeColor</li>
<li><a href="#flarecolor-class">FLARECOLOR</a> FlareColor</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3.RoutePointAltType RoutePointAltType</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3.RoutePointType RoutePointType</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3.RoutePointAction RoutePointAction</li>
</ul>

<h3 id="point_vec3-new-x-y-z">POINT_VEC3:New(x, y, z)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#distance%20x%20:%20the%20x%20coordinate%20of%20the%20vec3%20point,%20pointing%20to%20the-class">Distance x : The x coordinate of the Vec3 point, pointing to the</a> North.</li>
<li><a href="#distance%20y%20:%20the%20y%20coordinate%20of%20the%20vec3%20point,%20pointing-class">Distance y : The y coordinate of the Vec3 point, pointing</a> Upwards.</li>
<li><a href="#distance%20z%20:%20the%20z%20coordinate%20of%20the%20vec3%20point,%20pointing%20to%20the-class">Distance z : The z coordinate of the Vec3 point, pointing to the</a> Right.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec3-class">POINT_VEC3</a> self</li>
</ul>

<h3 id="point_vec3-newfromvec2-vec2">POINT_VEC3:NewFromVec2(Vec2)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#vec2%20vec2%20:%20the%20vec2-class">Vec2 Vec2 : The Vec2</a> point.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec3-class">POINT_VEC3</a> self</li>
</ul>

<h3 id="point_vec3-newfromvec3-vec3">POINT_VEC3:NewFromVec3(Vec3)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#vec3%20vec3%20:%20the%20vec3-class">Vec3 Vec3 : The Vec3</a> point.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec3-class">POINT_VEC3</a> self</li>
</ul>

<h3 id="point_vec3-getvec3">POINT_VEC3:GetVec3()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#vec3%20the%20:%20vec3-class">Vec3 The : Vec3</a> coodinate.</li>
</ul>

<h3 id="point_vec3-getvec2">POINT_VEC3:GetVec2()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#vec2%20the%20:%20vec2-class">Vec2 The : Vec2</a> coodinate.</li>
</ul>

<h3 id="point_vec3-getx">POINT_VEC3:GetX()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>number The : x coodinate.</li>
</ul>

<h3 id="point_vec3-gety">POINT_VEC3:GetY()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>number The : y coodinate.</li>
</ul>

<h3 id="point_vec3-getz">POINT_VEC3:GetZ()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>number The : z coodinate.</li>
</ul>

<h3 id="point_vec3-setx-x">POINT_VEC3:SetX(x)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li>number x : The x coordinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h3 id="point_vec3-sety-y">POINT_VEC3:SetY(y)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li>number y : The y coordinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h3 id="point_vec3-setz-z">POINT_VEC3:SetZ(z)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li>number z : The z coordinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h3 id="point_vec3-addx-x">POINT_VEC3:AddX(x)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li>number x : The x coordinate value to add to the current x coodinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h3 id="point_vec3-addy-y">POINT_VEC3:AddY(y)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li>number y : The y coordinate value to add to the current y coodinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h3 id="point_vec3-addz-z">POINT_VEC3:AddZ(z)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li>number z : The z coordinate value to add to the current z coodinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h3 id="point_vec3-getrandomvec2inradius-outerradius-innerradius">POINT_VEC3:GetRandomVec2InRadius(OuterRadius, InnerRadius)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#distance-class">Distance</a> OuterRadius</li>
<li><a href="#distance-class">Distance</a> InnerRadius</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#vec2-class">Vec2</a> Vec2</li>
</ul>

<h3 id="point_vec3-getrandompointvec2inradius-outerradius-innerradius">POINT_VEC3:GetRandomPointVec2InRadius(OuterRadius, InnerRadius)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#distance-class">Distance</a> OuterRadius</li>
<li><a href="#distance-class">Distance</a> InnerRadius</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h3 id="point_vec3-getrandomvec3inradius-outerradius-innerradius">POINT_VEC3:GetRandomVec3InRadius(OuterRadius, InnerRadius)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#distance-class">Distance</a> OuterRadius</li>
<li><a href="#distance-class">Distance</a> InnerRadius</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#vec3-class">Vec3</a> Vec3</li>
</ul>

<h3 id="point_vec3-getrandompointvec3inradius-outerradius-innerradius">POINT_VEC3:GetRandomPointVec3InRadius(OuterRadius, InnerRadius)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#distance-class">Distance</a> OuterRadius</li>
<li><a href="#distance-class">Distance</a> InnerRadius</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h3 id="point_vec3-getdirectionvec3-targetpointvec3">POINT_VEC3:GetDirectionVec3(TargetPointVec3)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3 TargetPointVec3 : The target POINT_VEC3.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#vec3%20directionvec3%20:%20the%20direction%20vector%20in%20vec3-class">Vec3 DirectionVec3 : The direction vector in Vec3</a> format.</li>
</ul>

<h3 id="point_vec3-getnorthcorrectionradians">POINT_VEC3:GetNorthCorrectionRadians()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>number CorrectionRadians : The correction in radians.</li>
</ul>

<h3 id="point_vec3-getdirectionradians-directionvec3">POINT_VEC3:GetDirectionRadians(DirectionVec3)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#vec3%20directionvec3%20:%20the%20direction%20vector%20in%20vec3-class">Vec3 DirectionVec3 : The direction vector in Vec3</a> format.</li>
</ul>

<h4> Returns </h4>

<ul>
<li>number DirectionRadians : The direction in radians.</li>
</ul>

<h3 id="point_vec3-get2ddistance-targetpointvec3">POINT_VEC3:Get2DDistance(TargetPointVec3)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3 TargetPointVec3 : The target POINT_VEC3.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#distance%20distance%20:%20the%20distance%20in-class">Distance Distance : The distance in</a> meters.</li>
</ul>

<h3 id="point_vec3-get3ddistance-targetpointvec3">POINT_VEC3:Get3DDistance(TargetPointVec3)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3 TargetPointVec3 : The target POINT_VEC3.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#distance%20distance%20:%20the%20distance%20in-class">Distance Distance : The distance in</a> meters.</li>
</ul>

<h3 id="point_vec3-tostringbr-angleradians-distance">POINT_VEC3:ToStringBR(AngleRadians, Distance)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li>number AngleRadians : The angle in randians</li>
<li>number Distance : The distance</li>
</ul>

<h4> Returns </h4>

<ul>
<li>string The : BR Text</li>
</ul>

<h3 id="point_vec3-tostringll-angleradians-distance">POINT_VEC3:ToStringLL(AngleRadians, Distance)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li>number AngleRadians : The angle in randians</li>
<li>number Distance : The distance</li>
</ul>

<h4> Returns </h4>

<ul>
<li>string The : BR Text</li>
</ul>

<h3 id="point_vec3-getaltitudetext">POINT_VEC3:GetAltitudeText()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>string Altitude : text.</li>
</ul>

<h3 id="point_vec3-getbrtext-targetpointvec3">POINT_VEC3:GetBRText(TargetPointVec3)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3 TargetPointVec3 : The target POINT_VEC3.</li>
</ul>

<h4> Returns </h4>

<ul>
<li>string The : BR text.</li>
</ul>

<h3 id="point_vec3-setmetric-metric">POINT_VEC3:SetMetric(Metric)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li>boolean Metric : true means metric, false means NM.</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-ismetric">POINT_VEC3:IsMetric()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>boolean Metric : true means metric, false means NM.</li>
</ul>

<h3 id="point_vec3-translate-distance-angle">POINT_VEC3:Translate(Distance, Angle)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#distance%20distance%20:%20the%20distance%20to%20be%20added%20in-class">Distance Distance : The Distance to be added in</a> meters.</li>
<li><a href="#angle%20angle%20:%20the%20angle%20in-class">Angle Angle : The Angle in</a> degrees.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 The : new calculated POINT_VEC3.</li>
</ul>

<h3 id="point_vec3-routepointair-alttype-type-action-speed-speedlocked">POINT_VEC3:RoutePointAir(AltType, Type, Action, Speed, SpeedLocked)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3.RoutePointAltType AltType : The altitude type.</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3.RoutePointType Type : The route point type.</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3.RoutePointAction Action : The route point action.</li>
<li><a href="#speed%20speed%20:%20airspeed%20in-class">Speed Speed : Airspeed in</a> km/h.</li>
<li>boolean SpeedLocked : true means the speed is locked.</li>
</ul>

<h4> Returns </h4>

<ul>
<li>table[] The : route point.</li>
</ul>

<h3 id="point_vec3-routepointground-speed-formation">POINT_VEC3:RoutePointGround(Speed, Formation)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#speed%20speed%20:%20speed%20in-class">Speed Speed : Speed in</a> km/h.</li>
<li><a href="#point_vec-class">POINT_VEC</a>
3.RoutePointAction Formation : The route point Formation.</li>
</ul>

<h4> Returns </h4>

<ul>
<li>table[] The : route point.</li>
</ul>

<h3 id="point_vec3-explosion-explosionintensity">POINT_VEC3:Explosion(ExplosionIntensity)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li>number ExplosionIntensity</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-illuminationbomb">POINT_VEC3:IlluminationBomb()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-smoke-smokecolor">POINT_VEC3:Smoke(SmokeColor)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#smokecolor-class">SMOKECOLOR</a> SmokeColor</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-smokegreen">POINT_VEC3:SmokeGreen()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-smokered">POINT_VEC3:SmokeRed()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-smokewhite">POINT_VEC3:SmokeWhite()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-smokeorange">POINT_VEC3:SmokeOrange()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-smokeblue">POINT_VEC3:SmokeBlue()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-flare-flarecolor-optional">POINT_VEC3:Flare(FlareColor, (optional))</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#flarecolor-class">FLARECOLOR</a> FlareColor</li>
<li><a href="#azimuth%20(optional)%20:%20azimuth%20the%20azimuth%20of%20the%20flare%20direction.%20the%20default%20azimuth%20is-class">Azimuth (optional) : Azimuth The azimuth of the flare direction. The default azimuth is</a> 0.</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-flarewhite-optional">POINT_VEC3:FlareWhite((optional))</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#azimuth%20(optional)%20:%20azimuth%20the%20azimuth%20of%20the%20flare%20direction.%20the%20default%20azimuth%20is-class">Azimuth (optional) : Azimuth The azimuth of the flare direction. The default azimuth is</a> 0.</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-flareyellow-optional">POINT_VEC3:FlareYellow((optional))</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#azimuth%20(optional)%20:%20azimuth%20the%20azimuth%20of%20the%20flare%20direction.%20the%20default%20azimuth%20is-class">Azimuth (optional) : Azimuth The azimuth of the flare direction. The default azimuth is</a> 0.</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-flaregreen-optional">POINT_VEC3:FlareGreen((optional))</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
<li><a href="#azimuth%20(optional)%20:%20azimuth%20the%20azimuth%20of%20the%20flare%20direction.%20the%20default%20azimuth%20is-class">Azimuth (optional) : Azimuth The azimuth of the flare direction. The default azimuth is</a> 0.</li>
</ul>

<h4> Returns </h4>

<h3 id="point_vec3-flarered">POINT_VEC3:FlareRed()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
3 self</li>
</ul>

<h4> Returns </h4>

<h2 id="point_vec2-class">POINT_VEC2 Class</h2>

<pre>
Inheritance : The POINT_VEC2 Class inherits from the following parents :
BASE
    `-- POINT_VEC3
        `-- POINT_VEC2
</pre>

<h4> Attributes </h4>

<ul>
<li><a href="#distance%20x%20:%20the%20x%20coordinate%20in-class">Distance x : The x coordinate in</a> meters.</li>
<li><a href="#distance%20y%20:%20the%20y%20coordinate%20in-class">Distance y : the y coordinate in</a> meters.</li>
</ul>

<h3 id="point_vec2-new-x-y-landheightadd">POINT_VEC2:New(x, y, LandHeightAdd)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li><a href="#distance%20x%20:%20the%20x%20coordinate%20of%20the%20vec3%20point,%20pointing%20to%20the-class">Distance x : The x coordinate of the Vec3 point, pointing to the</a> North.</li>
<li><a href="#distance%20y%20:%20the%20y%20coordinate%20of%20the%20vec3%20point,%20pointing%20to%20the-class">Distance y : The y coordinate of the Vec3 point, pointing to the</a> Right.</li>
<li><a href="#distance%20landheightadd%20:%20(optional)%20the%20default%20height%20if%20required%20to%20be%20evaluated%20will%20be%20the%20land%20height%20of%20the%20x,%20y%20coordinate.%20you%20can%20specify%20an%20extra%20height%20to%20be%20added%20to%20the%20land-class">Distance LandHeightAdd : (optional) The default height if required to be evaluated will be the land height of the x, y coordinate. You can specify an extra height to be added to the land</a> height.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec2-class">POINT_VEC2</a> self</li>
</ul>

<h3 id="point_vec2-newfromvec2-vec2">POINT_VEC2:NewFromVec2(Vec2)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li><a href="#vec2%20vec2%20:%20the%20vec2-class">Vec2 Vec2 : The Vec2</a> point.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec2-class">POINT_VEC2</a> self</li>
</ul>

<h3 id="point_vec2-newfromvec3-vec3">POINT_VEC2:NewFromVec3(Vec3)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li><a href="#vec3%20vec3%20:%20the%20vec3-class">Vec3 Vec3 : The Vec3</a> point.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec2-class">POINT_VEC2</a> self</li>
</ul>

<h3 id="point_vec2-getx">POINT_VEC2:GetX()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>number The : x coodinate.</li>
</ul>

<h3 id="point_vec2-gety">POINT_VEC2:GetY()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>number The : y coodinate.</li>
</ul>

<h3 id="point_vec2-getalt">POINT_VEC2:GetAlt()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>number The : land altitude.</li>
</ul>

<h3 id="point_vec2-getlat">POINT_VEC2:GetLat()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>number The : x coodinate.</li>
</ul>

<h3 id="point_vec2-getlon">POINT_VEC2:GetLon()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>number The : y coodinate.</li>
</ul>

<h3 id="point_vec2-setx-x">POINT_VEC2:SetX(x)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li>number x : The x coordinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h3 id="point_vec2-sety-y">POINT_VEC2:SetY(y)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li>number y : The y coordinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h3 id="point_vec2-setlat-x">POINT_VEC2:SetLat(x)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li>number x : The x coordinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h3 id="point_vec2-setalt-altitude">POINT_VEC2:SetAlt(Altitude)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li>number Altitude : The land altitude. If nothing (nil) is given, then the current land altitude is set.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h3 id="point_vec2-setlon-y">POINT_VEC2:SetLon(y)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li>number y : The y coordinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h3 id="point_vec2-addx-x">POINT_VEC2:AddX(x)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li>number x : The x coordinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h3 id="point_vec2-addy-y">POINT_VEC2:AddY(y)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li>number y : The y coordinate.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h3 id="point_vec2-addalt-altitude">POINT_VEC2:AddAlt(Altitude)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li>number Altitude : The Altitude to add. If nothing (nil) is given, then the current land altitude is set.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h3 id="point_vec2-distancefrompointvec2-pointvec2reference">POINT_VEC2:DistanceFromPointVec2(PointVec2Reference)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li><a href="#point_vec-class">POINT_VEC</a>
2 PointVec2Reference : The reference @{#POINT_VEC2}.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#distance%20the%20:%20distance%20from%20the%20reference%20@{#point_vec2}%20in-class">Distance The : distance from the reference @{#POINT_VEC2} in</a> meters.</li>
</ul>

<h3 id="point_vec2-distancefromvec2-vec2reference">POINT_VEC2:DistanceFromVec2(Vec2Reference)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li><a href="#vec2%20vec2reference%20:%20the%20reference-class">Vec2 Vec2Reference : The reference</a> @{DCSTypes#Vec2}.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#distance%20the%20:%20distance%20from%20the%20reference%20@{dcstypes#vec2}%20in-class">Distance The : distance from the reference @{DCSTypes#Vec2} in</a> meters.</li>
</ul>

<h3 id="point_vec2-getaltitudetext">POINT_VEC2:GetAltitudeText()</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
</ul>

<h4> Returns </h4>

<ul>
<li>string Empty : string.</li>
</ul>

<h3 id="point_vec2-translate-distance-angle">POINT_VEC2:Translate(Distance, Angle)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 self</li>
<li><a href="#distance%20distance%20:%20the%20distance%20to%20be%20added%20in-class">Distance Distance : The Distance to be added in</a> meters.</li>
<li><a href="#angle%20angle%20:%20the%20angle%20in-class">Angle Angle : The Angle in</a> degrees.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#point_vec-class">POINT_VEC</a>
2 The : new calculated POINT_VEC2.</li>
</ul>

<h2 id="point_vec3-routepointalttype-class">POINT_VEC3.RoutePointAltType Class</h2>

<pre>
**The POINT_VEC3.RoutePointAltType class does not inherit**
</pre>

<h4> Attributes </h4>

<ul>
<li>BARO &ldquo;BARO&rdquo;</li>
</ul>

<h2 id="point_vec3-routepointtype-class">POINT_VEC3.RoutePointType Class</h2>

<pre>
**The POINT_VEC3.RoutePointType class does not inherit**
</pre>

<h4> Attributes </h4>

<ul>
<li>TakeOffParking &ldquo;TakeOffParking&rdquo;</li>
<li>TurningPoint &ldquo;Turning : Point&rdquo;</li>
</ul>

<h2 id="point_vec3-routepointaction-class">POINT_VEC3.RoutePointAction Class</h2>

<pre>
**The POINT_VEC3.RoutePointAction class does not inherit**
</pre>

<h4> Attributes </h4>

<ul>
<li>FromParkingArea &ldquo;From : Parking Area&rdquo;</li>
<li>TurningPoint &ldquo;Turning : Point&rdquo;</li>
</ul>
