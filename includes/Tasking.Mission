<h1 id="tasking-mission-module">Tasking.Mission Module</h1>

<p>A MISSION is the main owner of a Mission orchestration within MOOSE . The Mission framework orchestrates <a href="#client-module">CLIENT</a>s, <a href="#task-module">TASK</a>s, <a href="#stage-module">STAGE</a>s etc.
A <a href="#client-module">CLIENT</a> needs to be registered within the <a href="#mission-module">MISSION</a> through the function <a href="#addclient-module">AddClient</a>. A <a href="#task-module">TASK</a> needs to be registered within the <a href="#mission-module">MISSION</a> through the function <a href="#addtask-module">AddTask</a>.</p>

<h2 id="mission-class">MISSION Class</h2>

<pre>
Inheritance : The MISSION Class inherits from the following parents :
ERROR !
    `-- MISSION
</pre>

<h4 id="attributes">Attributes</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
.Clients _Clients</li>
<li><a href="#menu_coalition-class">MENU_COALITION</a> MissionMenu</li>
<li>string MissionBriefing</li>
</ul>

<h3 id="mission-new-commandcenter-missionname-missionpriority-missionbriefing-missioncoalition">MISSION:New(CommandCenter, MissionName, MissionPriority, MissionBriefing, MissionCoalition)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li><a href="#commandcenter-class">COMMANDCENTER</a> CommandCenter</li>
<li>string MissionName : is the name of the mission. This name will be used to reference the status of each mission by the players.</li>
<li>string MissionPriority : is a string indicating the &ldquo;priority&rdquo; of the Mission. f.e. &ldquo;Primary&rdquo;, &ldquo;Secondary&rdquo; or &ldquo;First&rdquo;, &ldquo;Second&rdquo;. It is free format and up to the Mission designer to choose. There are no rules behind this field.</li>
<li>string MissionBriefing : is a string indicating the mission briefing to be shown when a player joins a <a href="#client-module">CLIENT</a>.</li>
<li>Dcs.DCSCoalitionWrapper.Object#coalition MissionCoalition : is a string indicating the coalition or party to which this mission belongs to. It is free format and can be chosen freely by the mission designer. Note that this field is not to be confused with the coalition concept of the ME. Examples of a Mission Coalition could be &ldquo;NATO&rdquo;, &ldquo;CCCP&rdquo;, &ldquo;Intruders&rdquo;, &ldquo;Terrorists&rdquo;&hellip;</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h3 id="mission-onleaveidle-from-event-to">MISSION:OnLeaveIdle(From, Event, To)</h3>

<p>OnLeave Transition Handler for State Idle.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean Return : false to cancel Transition.</li>
</ul>

<h3 id="mission-onenteridle-from-event-to">MISSION:OnEnterIdle(From, Event, To)</h3>

<p>OnEnter Transition Handler for State Idle.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-onleaveongoing-from-event-to">MISSION:OnLeaveOngoing(From, Event, To)</h3>

<p>OnLeave Transition Handler for State Ongoing.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean Return : false to cancel Transition.</li>
</ul>

<h3 id="mission-onenterongoing-from-event-to">MISSION:OnEnterOngoing(From, Event, To)</h3>

<p>OnEnter Transition Handler for State Ongoing.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-onbeforestart-from-event-to">MISSION:OnBeforeStart(From, Event, To)</h3>

<p>OnBefore Transition Handler for Event Start.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean Return : false to cancel Transition.</li>
</ul>

<h3 id="mission-onafterstart-from-event-to">MISSION:OnAfterStart(From, Event, To)</h3>

<p>OnAfter Transition Handler for Event Start.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-start">MISSION:Start()</h3>

<p>Synchronous Event Trigger for Event Start.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-onleaveidle-from-event-to">MISSION:OnLeaveIdle(From, Event, To)</h3>

<p>OnLeave Transition Handler for State Idle.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean Return : false to cancel Transition.</li>
</ul>

<h3 id="mission-onenteridle-from-event-to">MISSION:OnEnterIdle(From, Event, To)</h3>

<p>OnEnter Transition Handler for State Idle.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-onbeforestop-from-event-to">MISSION:OnBeforeStop(From, Event, To)</h3>

<p>OnBefore Transition Handler for Event Stop.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean Return : false to cancel Transition.</li>
</ul>

<h3 id="mission-onafterstop-from-event-to">MISSION:OnAfterStop(From, Event, To)</h3>

<p>OnAfter Transition Handler for Event Stop.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-stop">MISSION:Stop()</h3>

<p>Synchronous Event Trigger for Event Stop.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-onleavecompleted-from-event-to">MISSION:OnLeaveCompleted(From, Event, To)</h3>

<p>OnLeave Transition Handler for State Completed.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean Return : false to cancel Transition.</li>
</ul>

<h3 id="mission-onentercompleted-from-event-to">MISSION:OnEnterCompleted(From, Event, To)</h3>

<p>OnEnter Transition Handler for State Completed.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-onbeforecomplete-from-event-to">MISSION:OnBeforeComplete(From, Event, To)</h3>

<p>OnBefore Transition Handler for Event Complete.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean Return : false to cancel Transition.</li>
</ul>

<h3 id="mission-onaftercomplete-from-event-to">MISSION:OnAfterComplete(From, Event, To)</h3>

<p>OnAfter Transition Handler for Event Complete.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-complete">MISSION:Complete()</h3>

<p>Synchronous Event Trigger for Event Complete.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-onleavefailed-from-event-to">MISSION:OnLeaveFailed(From, Event, To)</h3>

<p>OnLeave Transition Handler for State Failed.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean Return : false to cancel Transition.</li>
</ul>

<h3 id="mission-onenterfailed-from-event-to">MISSION:OnEnterFailed(From, Event, To)</h3>

<p>OnEnter Transition Handler for State Failed.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-onbeforefail-from-event-to">MISSION:OnBeforeFail(From, Event, To)</h3>

<p>OnBefore Transition Handler for Event Fail.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean Return : false to cancel Transition.</li>
</ul>

<h3 id="mission-onafterfail-from-event-to">MISSION:OnAfterFail(From, Event, To)</h3>

<p>OnAfter Transition Handler for Event Fail.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>string From : The From State string.</li>
<li>string Event : The Event string.</li>
<li>string To : The To State string.</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-fail">MISSION:Fail()</h3>

<p>Synchronous Event Trigger for Event Fail.</p>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-getname">MISSION:GetName()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h3 id="mission-joinunit-playerunit-playergroup">MISSION:JoinUnit(PlayerUnit, PlayerGroup)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li><a href="#unit%20playerunit%20:%20the%20client%20or%20unit%20of%20the%20player%20joining%20the-class">UNIT PlayerUnit : The CLIENT or UNIT of the Player joining the</a> Mission.</li>
<li><a href="#group%20playergroup%20:%20the%20group%20of%20the%20player%20joining%20the-class">GROUP PlayerGroup : The GROUP of the player joining the</a> Mission.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean true : if Unit is part of a Task in the Mission.</li>
</ul>

<h3 id="mission-abortunit-playerunit">MISSION:AbortUnit(PlayerUnit)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li><a href="#unit%20playerunit%20:%20the%20client%20or%20unit%20of%20the%20player%20joining%20the-class">UNIT PlayerUnit : The CLIENT or UNIT of the Player joining the</a> Mission.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean true : if Unit is part of a Task in the Mission.</li>
</ul>

<h3 id="mission-crashunit-playerunit">MISSION:CrashUnit(PlayerUnit)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li><a href="#unit%20playerunit%20:%20the%20client%20or%20unit%20of%20the%20player-class">UNIT PlayerUnit : The CLIENT or UNIT of the Player</a> crashing.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean true : if Unit is part of a Task in the Mission.</li>
</ul>

<h3 id="mission-addscoring">MISSION:AddScoring()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h3 id="mission-getscoring">MISSION:GetScoring()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#scoring-class">SCORING</a>
Scoring</li>
</ul>

<h3 id="mission-getgroups">MISSION:GetGroups()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#set_group-class">SET_GROUP</a> self</li>
</ul>

<h3 id="mission-setmenu-menutime">MISSION:SetMenu(MenuTime)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>number MenuTime</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-removemenu-menutime">MISSION:RemoveMenu(MenuTime)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li>number MenuTime</li>
</ul>

<h4 id="returns">Returns</h4>

<h3 id="mission-getcommandcenter">MISSION:GetCommandCenter()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#commandcenter-class">COMMANDCENTER</a> self</li>
</ul>

<h3 id="mission-removetaskmenu-task">MISSION:RemoveTaskMenu(Task)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li><a href="#task-class">TASK</a> Task</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h3 id="mission-getmenu-taskgroup">MISSION:GetMenu(TaskGroup)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li><a href="#group-class">GROUP</a> TaskGroup</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#menu_coalition-class">MENU_COALITION</a> self</li>
</ul>

<h3 id="gettask">GetTask()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li>string TaskName : The Name of the <a href="#task-module">Task</a> within the <a href="#mission-module">Mission</a>.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#task%20the%20:-class">TASK The :</a> Task</li>
<li>nil Returns : nil if no task was found.</li>
</ul>

<h3 id="mission-addtask-task">MISSION:AddTask(Task)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li><a href="#task%20task%20:%20is%20the%20[task](#task-module)-class">TASK Task : is the <a href="#task-module">Task</a></a> object.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#task%20the%20:%20task-class">TASK The : task</a> added.</li>
</ul>

<h3 id="mission-removetask-task">MISSION:RemoveTask(Task)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li><a href="#task%20task%20:%20is%20the%20[task](#task-module)-class">TASK Task : is the <a href="#task-module">Task</a></a> object.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>nil The : cleaned Task reference.</li>
</ul>

<h3 id="mission-getnexttaskid-task">MISSION:GetNextTaskID(Task)</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
<li><a href="#task%20task%20:%20is%20the%20[task](#task-module)-class">TASK Task : is the <a href="#task-module">Task</a></a> object.</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li><a href="#task%20the%20:%20task-class">TASK The : task</a> added.</li>
</ul>

<h3 id="mission-iscompleted">MISSION:IsCompleted()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean self</li>
</ul>

<h3 id="mission-isidle">MISSION:IsIdle()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean self</li>
</ul>

<h3 id="mission-isongoing">MISSION:IsOngoing()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean self</li>
</ul>

<h3 id="mission-isfailed">MISSION:IsFailed()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean self</li>
</ul>

<h3 id="mission-ishold">MISSION:IsHold()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean self</li>
</ul>

<h3 id="mission-hasgroup">MISSION:HasGroup()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>boolean true : if the Mission has a Group.</li>
</ul>

<h3 id="mission-reportsummary">MISSION:ReportSummary()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>string self</li>
</ul>

<h3 id="mission-reportoverview">MISSION:ReportOverview()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>string self</li>
</ul>

<h3 id="mission-reportdetails">MISSION:ReportDetails()</h3>

<h4 id="parameters">Parameters</h4>

<ul>
<li><a href="#mission-class">MISSION</a>
self</li>
</ul>

<h4 id="returns">Returns</h4>

<ul>
<li>string self</li>
</ul>

<h3 id="mission-gettasks">MISSION.GetTasks(()</h3>
<pre class="highlight lua tab-lua"><code><span class="c1">-- Get Tasks from the Mission.</span>
<span class="n">Tasks</span> <span class="o">=</span> <span class="n">Mission</span><span class="p">:</span><span class="n">GetTasks</span><span class="p">()</span>
<span class="n">env</span><span class="p">.</span><span class="n">info</span><span class="p">(</span> <span class="s2">"Task 2 Completion = "</span> <span class="o">..</span> <span class="n">Tasks</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span><span class="n">GetGoalPercentage</span><span class="p">()</span> <span class="o">..</span> <span class="s2">"%"</span> <span class="p">)</span>
</code></pre>
<h4 id="parameters">Parameters</h4>

<h4 id="returns">Returns</h4>

<ul>
<li>{TASK,&hellip;} Structure : of TASKS with the <a href="#task-module">TASK</a> number as the key.</li>
</ul>
