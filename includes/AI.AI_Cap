<span id=ai-ai_cap-module></span><h1 id='ai-ai_cap-module-'>AI.AI_Cap Module</h1>
<p><strong>AI</strong> - <strong>Execute Combat Air Patrol (CAP).</strong></p>

<p><img src="/includes/Pictures/AI_CAP/Dia1.JPG" alt="Banner Image" /></p>

<p>AI CAP classes makes AI Controllables execute a Combat Air Patrol.</p>

<p>There are the following types of CAP classes defined:</p>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>: Perform a CAP in a zone.</li>
</ul>
<span id=demo-missions></span><h5 id='demo-missions-'>Demo Missions</h5><span id=a-href-https-github-com-flightcontrol-master-moose_missions-tree-master-release-cap-20-20combat-20air-20patrol-ai_cap-demo-missions-source-code-a></span><h5 id='a-href-https-github-com-flightcontrol-master-moose_missions-tree-master-release-cap-20-20combat-20air-20patrol-ai_cap-demo-missions-source-code-a-'><a href="https://github.com/FlightControl-Master/MOOSE_MISSIONS/tree/master-release/CAP%20-%20Combat%20Air%20Patrol">AI_CAP Demo Missions source code</a></h5><span id=a-href-https-github-com-flightcontrol-master-moose_missions-tree-master-cap-20-20combat-20air-20patrol-ai_cap-demo-missions-only-for-beta-testers-a></span><h5 id='a-href-https-github-com-flightcontrol-master-moose_missions-tree-master-cap-20-20combat-20air-20patrol-ai_cap-demo-missions-only-for-beta-testers-a-'><a href="https://github.com/FlightControl-Master/MOOSE_MISSIONS/tree/master/CAP%20-%20Combat%20Air%20Patrol">AI_CAP Demo Missions, only for beta testers</a></h5><span id=a-href-https-github-com-flightcontrol-master-moose_missions-releases-all-demo-missions-pack-of-the-last-release-a></span><h5 id='a-href-https-github-com-flightcontrol-master-moose_missions-releases-all-demo-missions-pack-of-the-last-release-a-'><a href="https://github.com/FlightControl-Master/MOOSE_MISSIONS/releases">ALL Demo Missions pack of the last release</a></h5><span id=youtube-channel></span><h5 id='youtube-channel-'>YouTube Channel</h5><span id=a-href-https-www-youtube-com-playlist-list-pl7zuru4zzul1ycypxjgozn-cfhwyew65l-ai_cap-youtube-channel-a></span><h5 id='a-href-https-www-youtube-com-playlist-list-pl7zuru4zzul1ycypxjgozn-cfhwyew65l-ai_cap-youtube-channel-a-'><a href="https://www.youtube.com/playlist?list=PL7ZUrU4zZUl1YCyPxJgoZn-CfhwyeW65L">AI_CAP YouTube Channel</a></h5><span id=strong-api-change-history-strong></span><h5 id='strong-api-change-history-strong-'><strong>API CHANGE HISTORY</strong></h5>
<p>The underlying change log documents the API changes. Please read this carefully. The following notation is used:</p>

<ul>
<li><strong>Added</strong> parts are expressed in bold type face.</li>
<li><em>Removed</em> parts are expressed in italic type face.</li>
</ul>

<p>Hereby the change log:</p>

<p>2017-01-15: Initial class and API.</p>
<span id=strong-authors-and-contributions-strong></span><h5 id='strong-authors-and-contributions-strong-'><strong>AUTHORS and CONTRIBUTIONS</strong></h5><span id=contributions></span><h5 id='contributions-'>Contributions:</h5>
<ul>
<li><strong><a href="https://forums.eagle.ru/member.php?u=90530">Quax</a></strong>: Concept, Advice &amp; Testing.</li>
<li><strong><a href="https://forums.eagle.ru/member.php?u=62835">Pikey</a></strong>: Concept, Advice &amp; Testing.</li>
<li><strong><a href="http://forums.eagle.ru:8080/member.php?u=75036">Gunterlund</a></strong>: Test case revision.</li>
<li>**<a href="http://forums.eagle.ru/member.php?u=3829">Whisper</a>: Testing.</li>
<li>**<a href="https://forums.eagle.ru/member.php?u=125166">Delta99</a>: Testing.</li>
</ul>
<span id=authors></span><h5 id='authors-'>Authors:</h5>
<ul>
<li><strong>FlightControl</strong>: Concept, Design &amp; Programming.</li>
</ul>
<span id=ai_cap_zone-class></span><h2 id='ai_cap_zone-class-'>AI_CAP_ZONE Class</h2>
<pre>
Inheritance : The AI_CAP_ZONE Class inherits from the following parents :
BASE
    `-- FSM
        `-- FSM_CONTROLLABLE
            `-- AI_PATROL_ZONE
                `-- AI_CAP_ZONE
</pre>

<p>The AI_CAP_ZONE class implements the core functions to patrol a <a href="#zone-module">Zone</a> by an AI <a href="#controllable-module">Controllable</a> or <a href="#group-module">Group</a>
and automatically engage any airborne enemies that are within a certain range or within a certain zone.</p>

<p><img src="/includes/Pictures/AI_CAP/Dia3.JPG" alt="Process" /></p>

<p>The AI_CAP_ZONE is assigned a <a href="#group-module">Group</a> and this must be done before the AI_CAP_ZONE process can be started using the <strong>Start</strong> event.</p>

<p><img src="/includes/Pictures/AI_CAP/Dia4.JPG" alt="Process" /></p>

<p>The AI will fly towards the random 3D point within the patrol zone, using a random speed within the given altitude and speed limits.
Upon arrival at the 3D point, a new random 3D point will be selected within the patrol zone using the given limits.</p>

<p><img src="/includes/Pictures/AI_CAP/Dia5.JPG" alt="Process" /></p>

<p>This cycle will continue.</p>

<p><img src="/includes/Pictures/AI_CAP/Dia6.JPG" alt="Process" /></p>

<p>During the patrol, the AI will detect enemy targets, which are reported through the <strong>Detected</strong> event.</p>

<p><img src="/includes/Pictures/AI_CAP/Dia9.JPG" alt="Process" /></p>

<p>When enemies are detected, the AI will automatically engage the enemy.</p>

<p><img src="/includes/Pictures/AI_CAP/Dia10.JPG" alt="Process" /></p>

<p>Until a fuel or damage treshold has been reached by the AI, or when the AI is commanded to RTB.
When the fuel treshold has been reached, the airplane will fly towards the nearest friendly airbase and will land.</p>

<p><img src="/includes/Pictures/AI_CAP/Dia13.JPG" alt="Process" /></p>
<span id=1-ai_cap_zone-constructor></span><h5 id='1-ai_cap_zone-constructor-'>1. AI_CAP_ZONE constructor</h5>
<ul>
<li><a href="#ai_cap_zone-new-patrolzone-patrolflooraltitude-patrolceilingaltitude-self-self-patrolalttype">AI_CAP_ZONE:New()</a>: Creates a new AI_CAP_ZONE object.</li>
</ul>
<span id=2-ai_cap_zone-is-a-fsm></span><h5 id='2-ai_cap_zone-is-a-fsm-'>2. AI_CAP_ZONE is a FSM</h5>
<p><img src="/includes/Pictures/AI_CAP/Dia2.JPG" alt="Process" /></p>
<span id=2-1-ai_cap_zone-states></span><h5 id='2-1-ai_cap_zone-states-'>2.1 AI_CAP_ZONE States</h5>
<ul>
<li><strong>None</strong> ( Group ): The process is not started yet.</li>
<li><strong>Patrolling</strong> ( Group ): The AI is patrolling the Patrol Zone.</li>
<li><strong>Engaging</strong> ( Group ): The AI is engaging the bogeys.</li>
<li><strong>Returning</strong> ( Group ): The AI is returning to Base..</li>
</ul>
<span id=2-2-ai_cap_zone-events></span><h5 id='2-2-ai_cap_zone-events-'>2.2 AI_CAP_ZONE Events</h5>
<ul>
<li><strong><a href="#ai_patrol_zone-start">AI_PATROL_ZONE:Start()</a></strong>: Start the process.</li>
<li><strong><a href="#ai_patrol_zone-route">AI_PATROL_ZONE:Route()</a></strong>: Route the AI to a new random 3D point within the Patrol Zone.</li>
<li><strong><a href="#ai_cap_zone-engage">AI_CAP_ZONE:Engage()</a></strong>: Let the AI engage the bogeys.</li>
<li><strong><a href="#ai_cap_zone-abort">AI_CAP_ZONE:Abort()</a></strong>: Aborts the engagement and return patrolling in the patrol zone.</li>
<li><strong><a href="#ai_patrol_zone-rtb">AI_PATROL_ZONE:RTB()</a></strong>: Route the AI to the home base.</li>
<li><strong><a href="#ai_patrol_zone-detect">AI_PATROL_ZONE:Detect()</a></strong>: The AI is detecting targets.</li>
<li><strong><a href="#ai_patrol_zone-detected">AI_PATROL_ZONE:Detected()</a></strong>: The AI has detected new targets.</li>
<li><strong><a href="#ai_cap_zone-destroy">AI_CAP_ZONE:Destroy()</a></strong>: The AI has destroyed a bogey <a href="#unit-module">Unit</a>.</li>
<li><strong>AI_CAP_ZONE-Destroyed</strong>: The AI has destroyed all bogeys <a href="#unit-module">Unit</a>s assigned in the CAS task.</li>
<li><strong>Status</strong> ( Group ): The AI is checking status (fuel and damage). When the tresholds have been reached, the AI will RTB.</li>
</ul>
<span id=3-set-the-range-of-engagement></span><h5 id='3-set-the-range-of-engagement-'>3. Set the Range of Engagement</h5>
<p><img src="/includes/Pictures/AI_CAP/Dia11.JPG" alt="Range" /></p>

<p>An optional range can be set in meters,
that will define when the AI will engage with the detected airborne enemy targets.
The range can be beyond or smaller than the range of the Patrol Zone.
The range is applied at the position of the AI.
Use the method <a href="#ai_cap_zone-setengagerange-engagerange">AI_CAP_ZONE:SetEngageRange()</a> to define that range.</p>
<span id=4-set-the-zone-of-engagement></span><h5 id='4-set-the-zone-of-engagement-'>4. Set the Zone of Engagement</h5>
<p><img src="/includes/Pictures/AI_CAP/Dia12.JPG" alt="Zone" /></p>

<p>An optional <a href="#zone-module">Zone</a> can be set,
that will define when the AI will engage with the detected airborne enemy targets.
Use the method <a href="#ai_cap_zone-setengagezone-engagezone">AI_CAP_ZONE:SetEngageZone()</a> to define that Zone.</p>

<h4> Attributes </h4>

<ul>
<li><a href="#controllable-class">CONTROLLABLE</a> AIControllable : The <a href="#controllable-module">Controllable</a> patrolling.</li>
<li><a href="#zone_base-class">ZONE_BASE</a> TargetZone : The <a href="#zone-module">Zone</a> where the patrol needs to be executed.</li>
</ul>
<span id=ai_cap_zone-new-patrolzone-patrolflooraltitude-patrolceilingaltitude-self-self-patrolalttype></span><h3 id='ai_cap_zone-new-patrolzone-patrolflooraltitude-patrolceilingaltitude-self-self-patrolalttype-'>AI_CAP_ZONE:New(PatrolZone, PatrolFloorAltitude, PatrolCeilingAltitude, self, self, PatrolAltType)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#zone_base-class">ZONE_BASE</a> PatrolZone : The <a href="#zone-module">Zone</a> where the patrol needs to be executed.</li>
<li><a href="#altitude-class">Altitude</a> PatrolFloorAltitude : The lowest altitude in meters where to execute the patrol.</li>
<li><a href="#altitude-class">Altitude</a> PatrolCeilingAltitude : The highest altitude in meters where to execute the patrol.</li>
<li><a href="#speed-class">Speed</a> self : PatrolMinSpeed The minimum speed of the <a href="#controllable-module">Controllable</a> in km/h.</li>
<li><a href="#speed-class">Speed</a> self : PatrolMaxSpeed The maximum speed of the <a href="#controllable-module">Controllable</a> in km/h.</li>
<li><a href="#altitudetype-class">AltitudeType</a> PatrolAltType : The altitude type (&quot;RADIO&quot;==&quot;AGL&quot;, &quot;BARO&quot;==&quot;ASL&quot;). Defaults to RADIO</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
</ul>
<span id=ai_cap_zone-onbeforeengage-controllable-from-event-to></span><h3 id='ai_cap_zone-onbeforeengage-controllable-from-event-to-'>AI_CAP_ZONE:OnBeforeEngage(Controllable, From, Event, To)</h3>
<p>OnBefore Transition Handler for Event Engage.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>
<span id=ai_cap_zone-onafterengage-controllable-from-event-to></span><h3 id='ai_cap_zone-onafterengage-controllable-from-event-to-'>AI_CAP_ZONE:OnAfterEngage(Controllable, From, Event, To)</h3>
<p>OnAfter Transition Handler for Event Engage.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-engage></span><h3 id='ai_cap_zone-engage-'>AI_CAP_ZONE:Engage()</h3>
<p>Synchronous Event Trigger for Event Engage.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onleaveengaging-controllable-from-event-to></span><h3 id='ai_cap_zone-onleaveengaging-controllable-from-event-to-'>AI_CAP_ZONE:OnLeaveEngaging(Controllable, From, Event, To)</h3>
<p>OnLeave Transition Handler for State Engaging.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>
<span id=ai_cap_zone-onenterengaging-controllable-from-event-to></span><h3 id='ai_cap_zone-onenterengaging-controllable-from-event-to-'>AI_CAP_ZONE:OnEnterEngaging(Controllable, From, Event, To)</h3>
<p>OnEnter Transition Handler for State Engaging.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onbeforefired-controllable-from-event-to></span><h3 id='ai_cap_zone-onbeforefired-controllable-from-event-to-'>AI_CAP_ZONE:OnBeforeFired(Controllable, From, Event, To)</h3>
<p>OnBefore Transition Handler for Event Fired.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>
<span id=ai_cap_zone-onafterfired-controllable-from-event-to></span><h3 id='ai_cap_zone-onafterfired-controllable-from-event-to-'>AI_CAP_ZONE:OnAfterFired(Controllable, From, Event, To)</h3>
<p>OnAfter Transition Handler for Event Fired.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-fired></span><h3 id='ai_cap_zone-fired-'>AI_CAP_ZONE:Fired()</h3>
<p>Synchronous Event Trigger for Event Fired.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onbeforedestroy-controllable-from-event-to></span><h3 id='ai_cap_zone-onbeforedestroy-controllable-from-event-to-'>AI_CAP_ZONE:OnBeforeDestroy(Controllable, From, Event, To)</h3>
<p>OnBefore Transition Handler for Event Destroy.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>
<span id=ai_cap_zone-onafterdestroy-controllable-from-event-to></span><h3 id='ai_cap_zone-onafterdestroy-controllable-from-event-to-'>AI_CAP_ZONE:OnAfterDestroy(Controllable, From, Event, To)</h3>
<p>OnAfter Transition Handler for Event Destroy.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-destroy></span><h3 id='ai_cap_zone-destroy-'>AI_CAP_ZONE:Destroy()</h3>
<p>Synchronous Event Trigger for Event Destroy.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onbeforeabort-controllable-from-event-to></span><h3 id='ai_cap_zone-onbeforeabort-controllable-from-event-to-'>AI_CAP_ZONE:OnBeforeAbort(Controllable, From, Event, To)</h3>
<p>OnBefore Transition Handler for Event Abort.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>
<span id=ai_cap_zone-onafterabort-controllable-from-event-to></span><h3 id='ai_cap_zone-onafterabort-controllable-from-event-to-'>AI_CAP_ZONE:OnAfterAbort(Controllable, From, Event, To)</h3>
<p>OnAfter Transition Handler for Event Abort.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-abort></span><h3 id='ai_cap_zone-abort-'>AI_CAP_ZONE:Abort()</h3>
<p>Synchronous Event Trigger for Event Abort.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onbeforeaccomplish-controllable-from-event-to></span><h3 id='ai_cap_zone-onbeforeaccomplish-controllable-from-event-to-'>AI_CAP_ZONE:OnBeforeAccomplish(Controllable, From, Event, To)</h3>
<p>OnBefore Transition Handler for Event Accomplish.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>
<span id=ai_cap_zone-onafteraccomplish-controllable-from-event-to></span><h3 id='ai_cap_zone-onafteraccomplish-controllable-from-event-to-'>AI_CAP_ZONE:OnAfterAccomplish(Controllable, From, Event, To)</h3>
<p>OnAfter Transition Handler for Event Accomplish.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-accomplish></span><h3 id='ai_cap_zone-accomplish-'>AI_CAP_ZONE:Accomplish()</h3>
<p>Synchronous Event Trigger for Event Accomplish.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-setengagezone-engagezone></span><h3 id='ai_cap_zone-setengagezone-engagezone-'>AI_CAP_ZONE:SetEngageZone(EngageZone)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#zone-class">ZONE</a> EngageZone : The zone where the AI is performing CAP.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
</ul>
<span id=ai_cap_zone-setengagerange-engagerange></span><h3 id='ai_cap_zone-setengagerange-engagerange-'>AI_CAP_ZONE:SetEngageRange(EngageRange)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><u>Number</u> EngageRange : The Engage Range.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
</ul>
<span id=ai_cap_zone-onafterstart-controllable-from-event-to></span><h3 id='ai_cap_zone-onafterstart-controllable-from-event-to-'>AI_CAP_ZONE:onafterStart(Controllable, From, Event, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onbeforeengage-controllable-from-event-to></span><h3 id='ai_cap_zone-onbeforeengage-controllable-from-event-to-'>AI_CAP_ZONE:onbeforeEngage(Controllable, From, Event, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onafterdetected-controllable-from-event-to></span><h3 id='ai_cap_zone-onafterdetected-controllable-from-event-to-'>AI_CAP_ZONE:onafterDetected(Controllable, From, Event, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onafterabort-controllable-from-event-to></span><h3 id='ai_cap_zone-onafterabort-controllable-from-event-to-'>AI_CAP_ZONE:onafterAbort(Controllable, From, Event, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onafterengage-controllable-from-event-to></span><h3 id='ai_cap_zone-onafterengage-controllable-from-event-to-'>AI_CAP_ZONE:onafterEngage(Controllable, From, Event, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onafteraccomplish-controllable-from-event-to></span><h3 id='ai_cap_zone-onafteraccomplish-controllable-from-event-to-'>AI_CAP_ZONE:onafterAccomplish(Controllable, From, Event, To)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-onafterdestroy-controllable-from-event-to-eventdata></span><h3 id='ai_cap_zone-onafterdestroy-controllable-from-event-to-eventdata-'>AI_CAP_ZONE:onafterDestroy(Controllable, From, Event, To, EventData)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
<li><a href="#eventdata-class">EVENTDATA</a> EventData</li>
</ul>

<h4> Returns </h4>
<span id=ai_cap_zone-oneventdead-eventdata></span><h3 id='ai_cap_zone-oneventdead-eventdata-'>AI_CAP_ZONE:OnEventDead(EventData)</h3>
<h4> Parameters </h4>

<ul>
<li><a href="#ai_cap_zone-class">AI_CAP_ZONE</a>
self</li>
<li><a href="#eventdata-class">EVENTDATA</a> EventData</li>
</ul>

<h4> Returns </h4>
