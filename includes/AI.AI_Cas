<h1 id="ai-ai_cas-module">AI.AI_Cas Module</h1>

<p><strong>AI</strong> &ndash; <strong>Provide Close Air Support to friendly ground troops.</strong></p>

<p><img src="/includes/Pictures/AI_CAS/Dia1.JPG" alt="Banner Image" /></p>

<p>AI CAS classes makes AI Controllables execute a Close Air Support.</p>

<p>There are the following types of CAS classes defined:</p>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>: Perform a CAS in a zone.</li>
</ul>

<h5 id="api-change-history"><strong>API CHANGE HISTORY</strong></h5>

<p>The underlying change log documents the API changes. Please read this carefully. The following notation is used:</p>

<ul>
<li><strong>Added</strong> parts are expressed in bold type face.</li>
<li><em>Removed</em> parts are expressed in italic type face.</li>
</ul>

<p>Hereby the change log:</p>

<p>2017-01-15: Initial class and API.</p>

<h5 id="authors-and-contributions"><strong>AUTHORS and CONTRIBUTIONS</strong></h5>

<h5 id="contributions">Contributions:</h5>

<ul>
<li><strong><a href="https://forums.eagle.ru/member.php?u=90530">Quax</a></strong>: Concept, Advice &amp; Testing.</li>
<li><strong><a href="https://forums.eagle.ru/member.php?u=62835">Pikey</a></strong>: Concept, Advice &amp; Testing.</li>
<li><strong><a href="http://forums.eagle.ru:8080/member.php?u=75036">Gunterlund</a></strong>: Test case revision.</li>
</ul>

<h5 id="authors">Authors:</h5>

<ul>
<li><strong>FlightControl</strong>: Concept, Design &amp; Programming.</li>
</ul>

<h2 id="ai_cas_zone-class">AI_CAS_ZONE Class</h2>

<pre>
Inheritance : The AI_CAS_ZONE Class inherits from the following parents :
BASE
    `-- FSM
        `-- FSM_CONTROLLABLE
            `-- AI_PATROL_ZONE
                `-- AI_CAS_ZONE
</pre>

<p><a href="#ai_cas_zone-class">AI_CAS_ZONE</a> derives from the <a href="#ai_patrol_zone-class">AI_PATROL_ZONE</a>, inheriting its methods and behaviour.</p>

<p>The <a href="#ai_cas_zone-class">AI_CAS_ZONE</a> class implements the core functions to provide Close Air Support in an Engage <a href="#zone-module">Zone</a> by an AIR <a href="#controllable-module">Controllable</a> or <a href="#group-module">Group</a>.
The AI_CAS_ZONE runs a process. It holds an AI in a Patrol Zone and when the AI is commanded to engage, it will fly to an Engage Zone.</p>

<p><img src="/includes/Pictures/AI_CAS/Dia3.JPG" alt="HoldAndEngage" /></p>

<p>The AI_CAS_ZONE is assigned a <a href="#group-module">Group</a> and this must be done before the AI_CAS_ZONE process can be started through the <strong>Start</strong> event.</p>

<p><img src="/includes/Pictures/AI_CAS/Dia4.JPG" alt="Start Event" /></p>

<p>Upon started, The AI will <strong>Route</strong> itself towards the random 3D point within a patrol zone,
using a random speed within the given altitude and speed limits.
Upon arrival at the 3D point, a new random 3D point will be selected within the patrol zone using the given limits.
This cycle will continue until a fuel or damage treshold has been reached by the AI, or when the AI is commanded to RTB.</p>

<p><img src="/includes/Pictures/AI_CAS/Dia5.JPG" alt="Route Event" /></p>

<p>When the AI is commanded to provide Close Air Support (through the event <strong>Engage</strong>), the AI will fly towards the Engage Zone.
Any target that is detected in the Engage Zone will be reported and will be destroyed by the AI.</p>

<p><img src="/includes/Pictures/AI_CAS/Dia6.JPG" alt="Engage Event" /></p>

<p>The AI will detect the targets and will only destroy the targets within the Engage Zone.</p>

<p><img src="/includes/Pictures/AI_CAS/Dia7.JPG" alt="Engage Event" /></p>

<p>Every target that is destroyed, is reported&lt; by the AI.</p>

<p><img src="/includes/Pictures/AI_CAS/Dia8.JPG" alt="Engage Event" /></p>

<p>Note that the AI does not know when the Engage Zone is cleared, and therefore will keep circling in the zone.</p>

<p><img src="/includes/Pictures/AI_CAS/Dia9.JPG" alt="Engage Event" /></p>

<p>Until it is notified through the event <strong>Accomplish</strong>, which is to be triggered by an observing party:</p>

<ul>
<li>a FAC</li>
<li>a timed event</li>
<li>a menu option selected by a human</li>
<li>a condition</li>
<li>others &hellip;</li>
</ul>

<p><img src="/includes/Pictures/AI_CAS/Dia10.JPG" alt="Engage Event" /></p>

<p>When the AI has accomplished the CAS, it will fly back to the Patrol Zone.</p>

<p><img src="/includes/Pictures/AI_CAS/Dia11.JPG" alt="Engage Event" /></p>

<p>It will keep patrolling there, until it is notified to RTB or move to another CAS Zone.
It can be notified to go RTB through the <strong>RTB</strong> event.</p>

<p>When the fuel treshold has been reached, the airplane will fly towards the nearest friendly airbase and will land.</p>

<p><img src="/includes/Pictures/AI_CAS/Dia12.JPG" alt="Engage Event" /></p>

<h5 id="1-1-ai_cas_zone-constructor">1.1) AI_CAS_ZONE constructor</h5>

<ul>
<li><a href="#ai_cas_zone-new-patrolzone-patrolflooraltitude-patrolceilingaltitude-self-self-engagezone-patrolalttype">AI_CAS_ZONE:New()</a>: Creates a new AI_CAS_ZONE object.</li>
</ul>

<h5 id="1-2-ai_cas_zone-is-a-fsm">1.2) AI_CAS_ZONE is a FSM</h5>

<p><img src="/includes/Pictures/AI_CAS/Dia2.JPG" alt="Process" /></p>

<h5 id="1-2-1-ai_cas_zone-states">1.2.1) AI_CAS_ZONE States</h5>

<ul>
<li><strong>None</strong> ( Group ): The process is not started yet.</li>
<li><strong>Patrolling</strong> ( Group ): The AI is patrolling the Patrol Zone.</li>
<li><strong>Engaging</strong> ( Group ): The AI is engaging the targets in the Engage Zone, executing CAS.</li>
<li><strong>Returning</strong> ( Group ): The AI is returning to Base..</li>
</ul>

<h5 id="1-2-2-ai_cas_zone-events">1.2.2) AI_CAS_ZONE Events</h5>

<ul>
<li><strong><a href="#ai_patrol_zone-start">AI_PATROL_ZONE:Start()</a></strong>: Start the process.</li>
<li><strong><a href="#ai_patrol_zone-route">AI_PATROL_ZONE:Route()</a></strong>: Route the AI to a new random 3D point within the Patrol Zone.</li>
<li><strong><a href="#ai_cas_zone-engage-engagespeed-engagealtitude-engageweaponexpend-engageattackqty-engagedirection">AI_CAS_ZONE:Engage()</a></strong>: Engage the AI to provide CAS in the Engage Zone, destroying any target it finds.</li>
<li><strong><a href="#ai_cas_zone-abort">AI_CAS_ZONE:Abort()</a></strong>: Aborts the engagement and return patrolling in the patrol zone.</li>
<li><strong><a href="#ai_patrol_zone-rtb">AI_PATROL_ZONE:RTB()</a></strong>: Route the AI to the home base.</li>
<li><strong><a href="#ai_patrol_zone-detect">AI_PATROL_ZONE:Detect()</a></strong>: The AI is detecting targets.</li>
<li><strong><a href="#ai_patrol_zone-detected">AI_PATROL_ZONE:Detected()</a></strong>: The AI has detected new targets.</li>
<li><strong><a href="#ai_cas_zone-destroy">AI_CAS_ZONE:Destroy()</a></strong>: The AI has destroyed a target <a href="#unit-module">Unit</a>.</li>
<li><strong>AI_CAS_ZONE-Destroyed</strong>: The AI has destroyed all target <a href="#unit-module">Unit</a>s assigned in the CAS task.</li>
<li><strong>Status</strong>: The AI is checking status (fuel and damage). When the tresholds have been reached, the AI will RTB.</li>
</ul>

<p>AI_CAS_ZONE class</p>

<h4> Attributes </h4>

<ul>
<li><a href="#controllable-class">CONTROLLABLE</a> AIControllable : The <a href="#controllable-module">Controllable</a> patrolling.</li>
<li><a href="#zone_base-class">ZONE_BASE</a> TargetZone : The <a href="#zone-module">Zone</a> where the patrol needs to be executed.</li>
</ul>

<h3 id="ai_cas_zone-new-patrolzone-patrolflooraltitude-patrolceilingaltitude-self-self-engagezone-patrolalttype">AI_CAS_ZONE:New(PatrolZone, PatrolFloorAltitude, PatrolCeilingAltitude, self, self, EngageZone, PatrolAltType)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#zone_base-class">ZONE_BASE</a> PatrolZone : The <a href="#zone-module">Zone</a> where the patrol needs to be executed.</li>
<li><a href="#altitude-class">Altitude</a> PatrolFloorAltitude : The lowest altitude in meters where to execute the patrol.</li>
<li><a href="#altitude-class">Altitude</a> PatrolCeilingAltitude : The highest altitude in meters where to execute the patrol.</li>
<li><a href="#speed-class">Speed</a> self : PatrolMinSpeed The minimum speed of the <a href="#controllable-module">Controllable</a> in km/h.</li>
<li><a href="#speed-class">Speed</a> self : PatrolMaxSpeed The maximum speed of the <a href="#controllable-module">Controllable</a> in km/h.</li>
<li><a href="#zone_base-class">ZONE_BASE</a> EngageZone : The zone where the engage will happen.</li>
<li><a href="#altitudetype-class">AltitudeType</a> PatrolAltType : The altitude type (&ldquo;RADIO&rdquo;==&ldquo;AGL&rdquo;, &ldquo;BARO&rdquo;==&ldquo;ASL&rdquo;). Defaults to RADIO</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
</ul>

<h3 id="ai_cas_zone-onbeforeengage-controllable-from-event-to">AI_CAS_ZONE:OnBeforeEngage(Controllable, From, Event, To)</h3>

<p>OnBefore Transition Handler for Event Engage.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onafterengage-controllable-from-event-to">AI_CAS_ZONE:OnAfterEngage(Controllable, From, Event, To)</h3>

<p>OnAfter Transition Handler for Event Engage.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-engage-engagespeed-engagealtitude-engageweaponexpend-engageattackqty-engagedirection">AI_CAS_ZONE:Engage(EngageSpeed, EngageAltitude, EngageWeaponExpend, EngageAttackQty, EngageDirection)</h3>

<p>Synchronous Event Trigger for Event Engage.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><u>Number</u> EngageSpeed : (optional) The speed the Group will hold when engaging to the target zone.</li>
<li><a href="#distance-class">Distance</a> EngageAltitude : (optional) Desired altitude to perform the unit engagement.</li>
<li><a href="#ai.task.weaponexpend-class">AI.Task.WeaponExpend</a> EngageWeaponExpend : (optional) Determines how much weapon will be released at each attack.</li>
<li><u>Number</u> EngageAttackQty : (optional) This parameter limits maximal quantity of attack. The aicraft/controllable will not make more attack than allowed even if the target controllable not destroyed and the aicraft/controllable still have ammo. If not defined the aircraft/controllable will attack target until it will be destroyed or until the aircraft/controllable will run out of ammo.</li>
<li><a href="#azimuth-class">Azimuth</a> EngageDirection : (optional) Desired ingress direction from the target to the attacking aircraft. Controllable/aircraft will make its attacks from the direction. Of course if there is no way to attack from the direction due the terrain controllable/aircraft will choose another direction.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onleaveengaging-controllable-from-event-to">AI_CAS_ZONE:OnLeaveEngaging(Controllable, From, Event, To)</h3>

<p>OnLeave Transition Handler for State Engaging.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>

<h3 id="ai_cas_zone-onenterengaging-controllable-from-event-to">AI_CAS_ZONE:OnEnterEngaging(Controllable, From, Event, To)</h3>

<p>OnEnter Transition Handler for State Engaging.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onbeforefired-controllable-from-event-to">AI_CAS_ZONE:OnBeforeFired(Controllable, From, Event, To)</h3>

<p>OnBefore Transition Handler for Event Fired.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>

<h3 id="ai_cas_zone-onafterfired-controllable-from-event-to">AI_CAS_ZONE:OnAfterFired(Controllable, From, Event, To)</h3>

<p>OnAfter Transition Handler for Event Fired.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-fired">AI_CAS_ZONE:Fired()</h3>

<p>Synchronous Event Trigger for Event Fired.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onbeforedestroy-controllable-from-event-to">AI_CAS_ZONE:OnBeforeDestroy(Controllable, From, Event, To)</h3>

<p>OnBefore Transition Handler for Event Destroy.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>

<h3 id="ai_cas_zone-onafterdestroy-controllable-from-event-to">AI_CAS_ZONE:OnAfterDestroy(Controllable, From, Event, To)</h3>

<p>OnAfter Transition Handler for Event Destroy.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-destroy">AI_CAS_ZONE:Destroy()</h3>

<p>Synchronous Event Trigger for Event Destroy.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onbeforeabort-controllable-from-event-to">AI_CAS_ZONE:OnBeforeAbort(Controllable, From, Event, To)</h3>

<p>OnBefore Transition Handler for Event Abort.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>

<h3 id="ai_cas_zone-onafterabort-controllable-from-event-to">AI_CAS_ZONE:OnAfterAbort(Controllable, From, Event, To)</h3>

<p>OnAfter Transition Handler for Event Abort.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-abort">AI_CAS_ZONE:Abort()</h3>

<p>Synchronous Event Trigger for Event Abort.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onbeforeaccomplish-controllable-from-event-to">AI_CAS_ZONE:OnBeforeAccomplish(Controllable, From, Event, To)</h3>

<p>OnBefore Transition Handler for Event Accomplish.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><u>Boolean</u> Return : false to cancel Transition.</li>
</ul>

<h3 id="ai_cas_zone-onafteraccomplish-controllable-from-event-to">AI_CAS_ZONE:OnAfterAccomplish(Controllable, From, Event, To)</h3>

<p>OnAfter Transition Handler for Event Accomplish.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-accomplish">AI_CAS_ZONE:Accomplish()</h3>

<p>Synchronous Event Trigger for Event Accomplish.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-setengagezone-engagezone">AI_CAS_ZONE:SetEngageZone(EngageZone)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#zone-class">ZONE</a> EngageZone : The zone where the AI is performing CAS.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
</ul>

<h3 id="ai_cas_zone-onafterstart-controllable-from-event-to">AI_CAS_ZONE:onafterStart(Controllable, From, Event, To)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onbeforeengage-controllable-from-event-to">AI_CAS_ZONE:onbeforeEngage(Controllable, From, Event, To)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onaftertarget-controllable-from-event-to">AI_CAS_ZONE:onafterTarget(Controllable, From, Event, To)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onafterabort-controllable-from-event-to">AI_CAS_ZONE:onafterAbort(Controllable, From, Event, To)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onafteraccomplish-controllable-from-event-to">AI_CAS_ZONE:onafterAccomplish(Controllable, From, Event, To)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-onafterdestroy-controllable-from-event-to-eventdata">AI_CAS_ZONE:onafterDestroy(Controllable, From, Event, To, EventData)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#controllable-class">CONTROLLABLE</a> Controllable : The Controllable Object managed by the FSM.</li>
<li><u>String</u> From : The From State string.</li>
<li><u>String</u> Event : The Event string.</li>
<li><u>String</u> To : The To State string.</li>
<li><a href="#eventdata-class">EVENTDATA</a> EventData</li>
</ul>

<h4> Returns </h4>

<h3 id="ai_cas_zone-oneventdead-eventdata">AI_CAS_ZONE:OnEventDead(EventData)</h3>

<h4> Parameters </h4>

<ul>
<li><a href="#ai_cas_zone-class">AI_CAS_ZONE</a>
self</li>
<li><a href="#eventdata-class">EVENTDATA</a> EventData</li>
</ul>

<h4> Returns </h4>
