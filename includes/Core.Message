<span id=core-message-module></span><h1 id='core-message-module-'>Core.Message Module</h1>
<p><strong>Core</strong> - MESSAGE class takes are of the <strong>real-time notifications</strong> and <strong>messages to players</strong> during a simulation.</p>

<p><img src="/includes/Pictures/MESSAGE/Dia1.JPG" alt="Banner Image" /></p>
<span id=message-class></span><h2 id='message-class-'>MESSAGE Class</h2>
<pre>
Inheritance : The MESSAGE Class inherits from the following parents :
BASE
    `-- MESSAGE
</pre>

<p>Message System to display Messages to Clients, Coalitions or All.
Messages are shown on the display panel for an amount of seconds, and will then disappear.
Messages can contain a category which is indicating the category of the message.</p>
<span id=message-construction></span><h5 id='message-construction-'>MESSAGE construction</h5>
<p>Messages are created with <a href="#message-new-messagetext-messageduration-messagecategory">MESSAGE:New()</a>. Note that when the MESSAGE object is created, no message is sent yet.
To send messages, you need to use the To functions.</p>
<span id=send-messages-to-an-audience></span><h5 id='send-messages-to-an-audience-'>Send messages to an audience</h5>
<p>Messages are sent:</p>

<ul>
<li>To a <a href="#client-module-">Client</a> using <a href="#message-toclient-client">MESSAGE:ToClient()</a>.</li>
<li>To a <a href="#group-module-">Group</a> using <a href="#message-togroup-group">MESSAGE:ToGroup()</a></li>
<li>To a coalition using <a href="#message-tocoalition-needs">MESSAGE:ToCoalition()</a>.</li>
<li>To the red coalition using MESSAGE-ToRed-.</li>
<li>To the blue coalition using MESSAGE-ToBlue-.</li>
<li>To all Players using MESSAGE-ToAll-.</li>
</ul>
<span id=send-conditionally-to-an-audience></span><h5 id='send-conditionally-to-an-audience-'>Send conditionally to an audience</h5>
<p>Messages can be sent conditionally to an audience (when a condition is true):</p>

<ul>
<li>To all players using MESSAGE-ToAllIf-.</li>
<li>To a coalition using <a href="#message-tocoalitionif-needs">MESSAGE:ToCoalitionIf()</a>.</li>
</ul>

<p>The MESSAGE class</p>
<span id=message-new-messagetext-messageduration-messagecategory></span><h3 id='message-new-messagetext-messageduration-messagecategory-'>MESSAGE:New(MessageText, MessageDuration, MessageCategory)</h3><pre class="highlight lua tab-lua"><code><span class="c1">-- Create a series of new Messages.</span>
<span class="c1">-- MessageAll is meant to be sent to all players, for 25 seconds, and is classified as "Score".</span>
<span class="c1">-- MessageRED is meant to be sent to the RED players only, for 10 seconds, and is classified as "End of Mission", with ID "Win".</span>
<span class="c1">-- MessageClient1 is meant to be sent to a Client, for 25 seconds, and is classified as "Score", with ID "Score".</span>
<span class="c1">-- MessageClient1 is meant to be sent to a Client, for 25 seconds, and is classified as "Score", with ID "Score".</span>
<span class="n">MessageAll</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To all Players: BLUE has won! Each player of BLUE wins 50 points!"</span><span class="p">,</span>  <span class="mi">25</span><span class="p">,</span> <span class="s2">"End of Mission"</span> <span class="p">)</span>
<span class="n">MessageRED</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To the RED Players: You receive a penalty because you've killed one of your own units"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Penalty"</span> <span class="p">)</span>
<span class="n">MessageClient1</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"Congratulations, you've just hit a target"</span><span class="p">,</span>  <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">)</span>
<span class="n">MessageClient2</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"Congratulations, you've just killed a target"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span><span class="p">)</span>
</code></pre>
<p>Creates a new MESSAGE object. Note that these MESSAGE objects are not yet displayed on the display panel. You must use the functions <a href="#toclient-module-">ToClient</a> or <a href="#tocoalition-module-">ToCoalition</a> or <a href="#toall-module-">ToAll</a> to send these Messages to the respective recipients.</p>

<h4> Parameters </h4>

<ul>
<li>self self</li>
<li><u>String</u> MessageText : is the text of the Message.</li>
<li><u>Number</u> MessageDuration : is a number in seconds of how long the MESSAGE should be shown on the display panel.</li>
<li><u>String</u> MessageCategory : (optional) is a string expressing the &quot;category&quot; of the Message. The category will be shown as the first text in the message followed by a &quot;: &quot;.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a></li>
</ul>
<span id=message-toclient-client></span><h3 id='message-toclient-client-'>MESSAGE:ToClient(Client)</h3><pre class="highlight lua tab-lua"><code><span class="c1">-- Send the 2 messages created with the [New](#new-module-) method to the Client Group.</span>
<span class="c1">-- Note that the Message of MessageClient2 is overwriting the Message of MessageClient1.</span>
<span class="n">ClientGroup</span> <span class="o">=</span> <span class="n">Group</span><span class="p">.</span><span class="n">getByName</span><span class="p">(</span> <span class="s2">"ClientGroup"</span> <span class="p">)</span>

<span class="n">MessageClient1</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"Congratulations, you've just hit a target"</span><span class="p">,</span> <span class="s2">"Score"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">):</span><span class="n">ToClient</span><span class="p">(</span> <span class="n">ClientGroup</span> <span class="p">)</span>
<span class="n">MessageClient2</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"Congratulations, you've just killed a target"</span><span class="p">,</span> <span class="s2">"Score"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">):</span><span class="n">ToClient</span><span class="p">(</span> <span class="n">ClientGroup</span> <span class="p">)</span>
<span class="ow">or</span>
<span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"Congratulations, you've just hit a target"</span><span class="p">,</span> <span class="s2">"Score"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">):</span><span class="n">ToClient</span><span class="p">(</span> <span class="n">ClientGroup</span> <span class="p">)</span>
<span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"Congratulations, you've just killed a target"</span><span class="p">,</span> <span class="s2">"Score"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">):</span><span class="n">ToClient</span><span class="p">(</span> <span class="n">ClientGroup</span> <span class="p">)</span>
<span class="ow">or</span>
<span class="n">MessageClient1</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"Congratulations, you've just hit a target"</span><span class="p">,</span> <span class="s2">"Score"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">)</span>
<span class="n">MessageClient2</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"Congratulations, you've just killed a target"</span><span class="p">,</span> <span class="s2">"Score"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">)</span>
<span class="n">MessageClient1</span><span class="p">:</span><span class="n">ToClient</span><span class="p">(</span> <span class="n">ClientGroup</span> <span class="p">)</span>
<span class="n">MessageClient2</span><span class="p">:</span><span class="n">ToClient</span><span class="p">(</span> <span class="n">ClientGroup</span> <span class="p">)</span>
</code></pre>
<p>Sends a MESSAGE to a Client Group. Note that the Group needs to be defined within the ME with the skillset &quot;Client&quot; or &quot;Player&quot;.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a>
self</li>
<li><a href="#client-class-">CLIENT</a> Client : is the Group of the Client.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a></li>
</ul>
<span id=message-togroup-group></span><h3 id='message-togroup-group-'>MESSAGE:ToGroup(Group)</h3>
<p>Sends a MESSAGE to a Group.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a>
self</li>
<li><a href="#group-class-">GROUP</a> Group : is the Group.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a></li>
</ul>
<span id=message-toblue></span><h3 id='message-toblue-'>MESSAGE:ToBlue()</h3><pre class="highlight lua tab-lua"><code><span class="c1">-- Send a message created with the [New](#new-module-) method to the BLUE coalition.</span>
<span class="n">MessageBLUE</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To the BLUE Players: You receive a penalty because you've killed one of your own units"</span><span class="p">,</span> <span class="s2">"Penalty"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">):</span><span class="n">ToBlue</span><span class="p">()</span>
<span class="ow">or</span>
<span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To the BLUE Players: You receive a penalty because you've killed one of your own units"</span><span class="p">,</span> <span class="s2">"Penalty"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">):</span><span class="n">ToBlue</span><span class="p">()</span>
<span class="ow">or</span>
<span class="n">MessageBLUE</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To the BLUE Players: You receive a penalty because you've killed one of your own units"</span><span class="p">,</span> <span class="s2">"Penalty"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">)</span>
<span class="n">MessageBLUE</span><span class="p">:</span><span class="n">ToBlue</span><span class="p">()</span>
</code></pre>
<p>Sends a MESSAGE to the Blue coalition.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a></li>
</ul>
<span id=message-tored></span><h3 id='message-tored-'>MESSAGE:ToRed()</h3><pre class="highlight lua tab-lua"><code><span class="c1">-- Send a message created with the [New](#new-module-) method to the RED coalition.</span>
<span class="n">MessageRED</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To the RED Players: You receive a penalty because you've killed one of your own units"</span><span class="p">,</span> <span class="s2">"Penalty"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">):</span><span class="n">ToRed</span><span class="p">()</span>
<span class="ow">or</span>
<span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To the RED Players: You receive a penalty because you've killed one of your own units"</span><span class="p">,</span> <span class="s2">"Penalty"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">):</span><span class="n">ToRed</span><span class="p">()</span>
<span class="ow">or</span>
<span class="n">MessageRED</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To the RED Players: You receive a penalty because you've killed one of your own units"</span><span class="p">,</span> <span class="s2">"Penalty"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">)</span>
<span class="n">MessageRED</span><span class="p">:</span><span class="n">ToRed</span><span class="p">()</span>
</code></pre>
<p>Sends a MESSAGE to the Red Coalition.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a></li>
</ul>
<span id=message-tocoalition-needs></span><h3 id='message-tocoalition-needs-'>MESSAGE:ToCoalition(needs)</h3><pre class="highlight lua tab-lua"><code><span class="c1">-- Send a message created with the [New](#new-module-) method to the RED coalition.</span>
<span class="n">MessageRED</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To the RED Players: You receive a penalty because you've killed one of your own units"</span><span class="p">,</span> <span class="s2">"Penalty"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">):</span><span class="n">ToCoalition</span><span class="p">(</span> <span class="n">coalition</span><span class="p">.</span><span class="n">side</span><span class="p">.</span><span class="n">RED</span> <span class="p">)</span>
<span class="ow">or</span>
<span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To the RED Players: You receive a penalty because you've killed one of your own units"</span><span class="p">,</span> <span class="s2">"Penalty"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">):</span><span class="n">ToCoalition</span><span class="p">(</span> <span class="n">coalition</span><span class="p">.</span><span class="n">side</span><span class="p">.</span><span class="n">RED</span> <span class="p">)</span>
<span class="ow">or</span>
<span class="n">MessageRED</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To the RED Players: You receive a penalty because you've killed one of your own units"</span><span class="p">,</span> <span class="s2">"Penalty"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Score"</span> <span class="p">)</span>
<span class="n">MessageRED</span><span class="p">:</span><span class="n">ToCoalition</span><span class="p">(</span> <span class="n">coalition</span><span class="p">.</span><span class="n">side</span><span class="p">.</span><span class="n">RED</span> <span class="p">)</span>
</code></pre>
<p>Sends a MESSAGE to a Coalition.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a>
self</li>
<li>CoalitionSide needs : to be filled out by the defined structure of the standard scripting engine @{coalition.side}.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a></li>
</ul>
<span id=message-tocoalitionif-needs></span><h3 id='message-tocoalitionif-needs-'>MESSAGE:ToCoalitionIf(needs)</h3>
<p>Sends a MESSAGE to a Coalition if the given Condition is true.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a>
self</li>
<li>CoalitionSide needs : to be filled out by the defined structure of the standard scripting engine @{coalition.side}.</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a></li>
</ul>
<span id=message-toall></span><h3 id='message-toall-'>MESSAGE:ToAll()</h3><pre class="highlight lua tab-lua"><code><span class="c1">-- Send a message created to all players.</span>
<span class="n">MessageAll</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To all Players: BLUE has won! Each player of BLUE wins 50 points!"</span><span class="p">,</span> <span class="s2">"End of Mission"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Win"</span> <span class="p">):</span><span class="n">ToAll</span><span class="p">()</span>
<span class="ow">or</span>
<span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To all Players: BLUE has won! Each player of BLUE wins 50 points!"</span><span class="p">,</span> <span class="s2">"End of Mission"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Win"</span> <span class="p">):</span><span class="n">ToAll</span><span class="p">()</span>
<span class="ow">or</span>
<span class="n">MessageAll</span> <span class="o">=</span> <span class="n">MESSAGE</span><span class="p">:</span><span class="n">New</span><span class="p">(</span> <span class="s2">"To all Players: BLUE has won! Each player of BLUE wins 50 points!"</span><span class="p">,</span> <span class="s2">"End of Mission"</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="s2">"Win"</span> <span class="p">)</span>
<span class="n">MessageAll</span><span class="p">:</span><span class="n">ToAll</span><span class="p">()</span>
</code></pre>
<p>Sends a MESSAGE to all players.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a></li>
</ul>
<span id=message-toallif></span><h3 id='message-toallif-'>MESSAGE:ToAllIf()</h3>
<p>Sends a MESSAGE to all players if the given Condition is true.</p>

<h4> Parameters </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a>
self</li>
</ul>

<h4> Returns </h4>

<ul>
<li><a href="#message-class-">MESSAGE</a></li>
</ul>
